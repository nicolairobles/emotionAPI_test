exit
next
oid
response.each_header do |key, value|
response.each_header
response
next
response
next
oid
next
 next
exit
next
response
next
nextrequest = Net::HTTP::Get.new(uri.request_uri)
request
next
uri.query
uri_query
next
uri
next
uri
next
oid
next
operation_location
oid
next
response["operation-location"]
exit
response.each_header { |k,v| s<< "#{k}: #{v}"}
response.each_header |key, value| { p "#{key}: #{value}"}
response.each_header do |key, value| { p "#{key}: #{value}"}
  p "#{key} => #{value}"
response.each_header do |key, value|
response["content-type"]
response["Content-Type"]
response.body
 response
exit
response["Contenty-Type"]
response
request.body
request
http.request
uri.scheme
:use_ssl
uri.port
uri.host
response = Net::HTTP.get_response("http://localhost:4000/mark_zuck.mp4","/?search=thing&format=json")
request
 response
exit
response.body
response
next
exit
data
next
exit
next
response
next
response
request.body = '{"url": "http://localhost:5000/mark_zuck.mov"}'
request.body
next
request.Ocp-Apim-Subscription-Key
request.body
request['Ocp-Apim-Subscription-Key']
request
next
uri.request_uri
request
next
URI.encode_www_form
uri.query
next
uri
next
